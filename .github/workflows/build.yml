name: alfresco Extension Inspector Build Workflow

on:
  push:
    branches:
      - master
      - 'fix/**'
      - 'support/**'
      - 'feature/**'
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      commitMessage:
        description: Enter the Commit Message
        required: true

env:
  SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
  NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  GITHUB_EVENT: ${{ github.event_name }}
  VERSION: 1.9.0

jobs:
  pmd_scan:
    name: "PMD Scan"
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' &&
      !contains(github.event.head_commit.message, '[skip pmd]') &&
      !contains(github.event.head_commit.message, '[skip tests]') &&
      !contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: Alfresco/ya-pmd-scan@v2.0.5
        with:
          fail-on-new-issues: "false"
          create-github-annotations: "false"

  veracode_sast_acs:
    name: "Pipeline SAST Scan ACS"
    runs-on: ubuntu-latest
    if: >
      ((github.ref_name == 'master' || startsWith(github.ref_name, 'release/') || github.event_name == 'pull_request')) &&
      !contains(github.event.head_commit.message, '[skip tests]')
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v3.3.3
      - uses: Alfresco/alfresco-build-tools/.github/actions/free-hosted-runner-disk-space@v3.3.3
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v3.3.3
      - name: "Login to Docker Hub"
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: "Login to Quay.io"
        uses: docker/login-action@v2.1.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: "Build"
        timeout-minutes: ${{ fromJSON(env.GITHUB_ACTIONS_DEPLOY_TIMEOUT) }}
        run: |
          bash ./scripts/ci/init.sh
          mvn -B -U install -DskipTests
      - name: "Run ACS SAST Scan"
        uses: veracode/Veracode-pipeline-scan-action@v1.0.10
        with:
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          file: "extension-inspector-packaging/target/alfresco-extension-inspector-*.jar"
          fail_build: true
          project_name: alfresco-extension-inspector
          issue_details: true
          veracode_policy_name: Alfresco Default
          summary_output: true
          summary_output_file: readable_results.txt
          summary_display: true
      - name: Upload scan result
        if: success() || failure()
        run: zip readable_output.zip readable_results.txt
      - name: Upload Artifact
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: Veracode Pipeline-Scan Results (Human Readable)
          path: readable_output.zip

  tests:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip tests]') || inputs.commitMessage == '[skip tests]' }}
    strategy:
      matrix:
        script: [ source_clear, unit_tests ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17

      - name: Setup maven
        shell: bash
        run: |
          [ -d ${HOME}/.m2/ ] || mkdir -p ${HOME}/.m2/
          cp -v _ci/settings.xml ${HOME}/.m2/ || cp -v .travis.settings.xml ${HOME}/.m2/settings.xml

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run ${{ matrix.script }}
        run:  bash _ci/${{ matrix.script }}.sh

  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ ( startsWith(github.ref_name, 'support/') || github.ref_name == 'master' ) &&
        contains(github.event.head_commit.message, '[release]') || inputs.commitMessage == '[release]' }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_STAGING_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_S3_STAGING_SECRET_KEY }}
          aws-region: eu-west-1

      - uses: Alfresco/alfresco-build-tools/.github/actions/get-build-info@v3.3.3

      - name: Get branch name
        uses: Alfresco/alfresco-build-tools/.github/actions/get-branch-name@v3.3.3

      - name: Setup maven
        shell: bash
        run: |
          [ -d ${HOME}/.m2/ ] || mkdir -p ${HOME}/.m2/
          cp -v _ci/settings.xml ${HOME}/.m2/ || cp -v .travis.settings.xml ${HOME}/.m2/settings.xml

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "release to nexus"
        env:
          GIT_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
          GIT_EMAIL: ${{ secrets.BOT_GITHUB_EMAIL }}
          GIT_PASSWORD: ${{ secrets.BOT_GITHUB_TOKEN }}
          BUILD_NUMBER: ${{ github.run_number }}
        run: bash _ci/release.sh

      - name: "prepare_staging_deploy"
        run: bash _ci/prepare_staging_deploy.sh

      - name: "Deploy to S3 Staging Bucket"
        run : aws s3 cp --recursive ./deploy_dir s3://alfresco-artefacts-staging/AlfrescoExtensionInspector/${VERSION}

  publish:
    name: "Copy-to-S3-Release-Bucket"
    runs-on: ubuntu-latest
    needs: release
    if: ${{ ( startsWith(github.ref_name, 'support/') || github.ref_name == 'master' )  &&
        contains(github.event.head_commit.message, '[publish]') || inputs.commitMessage == '[publish]'  &&
        github.event_name != 'pull_request'}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_RELEASE_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_RELEASE_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: "copy to release bucket"
        run : bash _ci/copy_to_release_bucket.sh
